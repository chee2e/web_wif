name: Build and Push Docker Image to GCR

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
      
env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  IMAGE_NAME: testweb
  IMAGE_TAG: latest
  DOCKERFILE_PATH: ./Dockerfile
  
  
jobs:
  build_and_push:
    permissions:
      id-token: write
      contents: read
  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source code
      uses: 'actions/checkout@v3'
    
    # 1. Docker Image Build
    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        
    # 2. WIF 적용 & Image Push (GCR)
    - id: google-auth
      name: Auth with OIDC
      uses: 'google-github-actions/auth@v1'
      with:
        #token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        audience: 'https://github.com/chee2e/web_wif'
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1

    - name: Configure Docker client
      run: |
        gcloud auth configure-docker -q
        
    - name: Push Docker image
      run: |
        docker push gcr.io/${{ secrets.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    
    # 3. Trivy Scan         
    - name: trivy_scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'gcr.io/${{ secrets.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
        format: json
        exit-code: 0
        output: '${{ env.IMAGE_NAME }}_report.json'
        
    - name: report_processing
      run: |
        cat ${{ env.IMAGE_NAME }}_report.json | jq -c '.Results[] | {Type, Class, Target, Vulnerabilities: [.Vulnerabilities[] | {PkgName, VulnerabilityID, Severity, InstalledVersion, FixedVersion, Title, PrimaryURL}]}' > ${{ env.IMAGE_NAME }}_result.json
       
#     # 4. Upload GCS   
#     - id: 'upload-file'
#       uses: 'google-github-actions/upload-cloud-storage@v1'
#       with:
#         path: '${{ env.IMAGE_NAME }}_result.json'
#         destination: ${{ secrets.GCS_BUCKET_PATH }}

    # 4. Upload BQ table
    - name: Load JSON into BigQuery
      env:
        DATA_SET: trivy_test
        TABLE_NAME: trivy_result_$GITHUB_SHA
      run: |
       bq --location=asia-northeast3 load \
       --autodetect \
       --source_format=NEWLINE_DELIMITED_JSON \
       ${{ secrets.PROJECT_ID }}:${{ env.DATA_SET }}.${{ env.TABLE_NAME }} \
        ${{ env.IMAGE_NAME }}_result.json
        
    - name: Run BigQuery query
      run: |
        bq query --use_legacy_sql=false --format=json "
        SELECT
          Target,
          Class,
          Type,
          PrimaryURL,
          Title,
          InstalledVersion,
          Severity,
          VulnerabilityID,
          FixedVersion,
          PkgName
         FROM
          trivy_test.trivy_result_$GITHUB_SHA,
          UNNEST(trivy_result_$GITHUB_SHA.Vulnerabilities)
        "
        
    - name: Save query results
      env:
        DATA_SET: trivy_test
        TABLE_NAME: trivy_result_$GITHUB_SHA
      run: |
          bq query --use_legacy_sql=false --format=json --destination_table ${{ secrets.PROJECT_ID }}:${{ env.DATA_SET }}.${{ env.TABLE_NAME }} --replace "
          SELECT
            Target,
            Class,
            Type,
            PrimaryURL,
            Title,
            InstalledVersion,
            Severity,
            VulnerabilityID,
            FixedVersion,
            PkgName
          FROM
            trivy_test.trivy_result_$GITHUB_SHA,
            UNNEST(result_test_v3.Vulnerabilities)
          "
